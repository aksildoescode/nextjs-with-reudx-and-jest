{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/koceila/Documents/Lab/Project/ecomlib-base/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { styletron, debug } from '../styletron';\nimport configureStore from '../redux/configureStore';\nimport Page from '../components/Page';\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\nconst makeStore = configureStore;\n\nclass EcomlibApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(StyletronProvider, {\n      value: styletron,\n      debug: debug,\n      debugAfterHydration: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"EcomLib | Find the Best E-commerce Courses & Tutorials\")), __jsx(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withRedux(makeStore)(EcomlibApp);","map":{"version":3,"sources":["/home/koceila/Documents/Lab/Project/ecomlib-base/pages/_app.js"],"names":["React","App","Head","Provider","withRedux","StyletronProvider","styletron","debug","configureStore","Page","makeStore","EcomlibApp","getInitialProps","Component","ctx","pageProps","render","store","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,SAASD,QAAQ,IAAIE,iBAArB,QAA8C,iBAA9C;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,cAAjC;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA;;;;;;;;;AAQA,MAAMC,SAAS,GAAGF,cAAlB;;AAEA,MAAMG,UAAN,SAAyBV,GAAzB,CAA6B;AAC3B,eAAaW,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AAEA,WACE,4BACE,MAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEZ,SAA1B;AAAqC,MAAA,KAAK,EAAEC,KAA5C;AAAmD,MAAA,mBAAmB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,CADF,EAME,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CANF,CADF,CADF;AAgBD;;AA3B0B;;AA8B7B,eAAeX,SAAS,CAACM,SAAD,CAAT,CAAqBC,UAArB,CAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head'\nimport { Provider } from 'react-redux'\nimport withRedux from 'next-redux-wrapper'\n\nimport { Provider as StyletronProvider } from 'styletron-react'\nimport { styletron, debug } from '../styletron'\n\nimport configureStore from '../redux/configureStore'\nimport Page from '../components/Page'\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = configureStore\n\nclass EcomlibApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {}\n\n    return { pageProps }\n  }\n  render() {\n    const { Component, pageProps, store } = this.props\n\n    return (\n      <>\n        <StyletronProvider value={styletron} debug={debug} debugAfterHydration>\n          <Head>\n            <title>\n              EcomLib | Find the Best E-commerce Courses &amp; Tutorials\n            </title>\n          </Head>\n          <Page>\n            <Provider store={store}>\n              <Component {...pageProps} />\n            </Provider>\n          </Page>\n        </StyletronProvider>\n      </>\n    )\n  }\n}\n\nexport default withRedux(makeStore)(EcomlibApp)\n"]},"metadata":{},"sourceType":"module"}