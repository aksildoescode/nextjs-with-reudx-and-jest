{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/koceila/Documents/Lab/Project/ecomlib-base/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\n\nvar IndexPage = function IndexPage(_ref) {\n  var categories = _ref.categories;\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \" index page\");\n};\n\nIndexPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var store;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref2.store;\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/koceila/Documents/Lab/Project/ecomlib-base/pages/index.js"],"names":["axios","IndexPage","categories","getInitialProps","store"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACpC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,CAFD;;AAIAD,SAAS,CAACE,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAuBA,eAAeH,SAAf","sourcesContent":["import axios from 'axios'\n\nconst IndexPage = ({ categories }) => {\n  return <p> index page</p>\n}\n\nIndexPage.getInitialProps = async ({ store }) => {\n  // store.dispatch(setLoaderStart())\n  // let cat\n  // try {\n  //   const res = await axios.get(`${config.URL}/categories`)\n  //   const categories = await res.data\n  //   cat = await categories.map(category => {\n  //     return {\n  //       id: category.id,\n  //       name: category.name,\n  //       img: `${config.URL}${category.img.url}`,\n  //     }\n  //   })\n  //   await store.dispatch(setCategories(cat))\n  // } catch (error) {\n  //   store.dispatch(setError(error.message))\n  // }\n  // store.dispatch(setLoaderEnd())\n  // return {\n  //   categories: cat,\n  // }\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}